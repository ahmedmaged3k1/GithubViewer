package com.example.githubviewer.data.remote.dto

import androidx.room.PrimaryKey
import com.example.githubviewer.domain.model.License
import com.example.githubviewer.domain.model.Owner


data class RepoDetailsResponse(
    var allow_forking: Boolean = false,
    val archive_url: String = "No archive URL available",
    var archived: Boolean = false,
    val assignees_url: String = "No assignees URL available",
    val blobs_url: String = "No blobs URL available",
    val branches_url: String = "No branches URL available",
    val clone_url: String = "No clone URL available",
    val collaborators_url: String = "No collaborators URL available",
    val comments_url: String = "No comments URL available",
    val commits_url: String = "No commits URL available",
    val compare_url: String = "No compare URL available",
    val contents_url: String = "No contents URL available",
    val contributors_url: String = "No contributors URL available",
    val created_at: String = "No creation date available",
    val default_branch: String = "No default branch available",
    val deployments_url: String = "No deployments URL available",
    val description: String? = "No description available",
    var disabled: Boolean = false,
    val downloads_url: String = "No downloads URL available",
    val events_url: String = "No events URL available",
    var fork: Boolean = false,
    val forks: Int = -1,
    val forks_count: Int = -1,
    val forks_url: String = "No forks URL available",
    val full_name: String = "No full name available",
    val git_commits_url: String = "No git commits URL available",
    val git_refs_url: String = "No git refs URL available",
    val git_tags_url: String = "No git tags URL available",
    val git_url: String = "No git URL available",
    var has_discussions: Boolean = false,
    var has_downloads: Boolean = false,
    var has_issues: Boolean = false,
    var has_pages: Boolean = false,
    var has_projects: Boolean = false,
    var has_wiki: Boolean = false,
    val homepage: String = "No homepage available",
    val hooks_url: String = "No hooks URL available",
    val html_url: String = "No HTML URL available",
    val id: Int = -1,
    var is_template: Boolean = false,
    val issue_comment_url: String = "No issue comment URL available",
    val issue_events_url: String = "No issue events URL available",
    val issues_url: String = "No issues URL available",
    val keys_url: String = "No keys URL available",
    val labels_url: String = "No labels URL available",
    val language: String = "No language available",
    val languages_url: String = "No languages URL available",
    val license: License = License(

        "No key available",
        "No name available",
        "No node ID available",
        "No SPDX ID available",
        "No URL available"
    ),  // Assuming License has its own default values
    val merges_url: String = "No merges URL available",
    val milestones_url: String = "No milestones URL available",
    val mirror_url: Any? = null,
    val name: String? = "No name available",
    val network_count: Int = -1,
    val node_id: String = "No node ID available",
    val notifications_url: String = "No notifications URL available",
    val open_issues: Int = -1,
    val open_issues_count: Int = -1,
    val owner: Owner? = Owner(
        "No avatar URL available",
        "No events URL available",
        "No followers URL available",
        "No following URL available",
        "No gists URL available",
        "No gravatar ID available",
        "No HTML URL available",
        -1,
        "No Name available",
        "No node ID available",
        "No organizations URL available",
        "No received events URL available",
        "No repos URL available",
        false,
        "No starred URL available",
        "No subscriptions URL available",
        "No type available",
        "No URL available"
    ),  // Assuming Owner has its own default values
    var private: Boolean = false,
    val pulls_url: String = "No pulls URL available",
    val pushed_at: String = "No push date available",
    val releases_url: String = "No releases URL available",
    val size: Int = -1,
    val ssh_url: String = "No SSH URL available",
    val stargazers_count: Int = -1,
    val stargazers_url: String = "No stargazers URL available",
    val statuses_url: String = "No statuses URL available",
    val subscribers_count: Int = -1,
    val subscribers_url: String = "No subscribers URL available",
    val subscription_url: String = "No subscription URL available",
    val svn_url: String = "No SVN URL available",
    val tags_url: String = "No tags URL available",
    val teams_url: String = "No teams URL available",
    val temp_clone_token: Any? = null,
    val topics: List<Any> = emptyList(),
    val trees_url: String = "No trees URL available",
    val updated_at: String = "No update date available",
    @PrimaryKey val url: String = "No URL available",
    val visibility: String = "No visibility available",
    val watchers: Int = -1,
    val watchers_count: Int = -1,
    var web_commit_signoff_required: Boolean = false
)

